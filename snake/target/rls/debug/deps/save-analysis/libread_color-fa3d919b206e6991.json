{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0","program":"/home/andy/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","read_color","/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=fa3d919b206e6991","-C","extra-filename=-fa3d919b206e6991","--out-dir","/home/andy/Rustprojects/snake/target/rls/debug/deps","-L","dependency=/home/andy/Rustprojects/snake/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/andy/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/andy/Rustprojects/snake/target/rls/debug/deps/libread_color-fa3d919b206e6991.rmeta"},"prelude":{"crate_id":{"name":"read_color","disambiguator":[130187207870275087,2351356110565876384]},"crate_root":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src","external_crates":[{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}}],"span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":0,"byte_end":2450,"line_start":1,"line_end":100,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":0,"byte_end":2450,"line_start":1,"line_end":100,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":11}],"decl_id":null,"docs":" A simple library for reading hex colors.\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"! A simple library for reading hex colors.","span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":24,"byte_end":68,"line_start":3,"line_end":3,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":4},"span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":141,"byte_end":152,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"char_to_hex","qualname":"::char_to_hex","value":"fn (ch: char) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Converts a character into a u8 value.\n","sig":null,"attributes":[{"value":"/ Converts a character into a u8 value.","span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":92,"byte_end":133,"line_start":7,"line_end":7,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":5},"span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":630,"byte_end":633,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"hex","qualname":"::hex","value":"fn (chars: &mut Chars) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Reads a hex value from an iterator of characters.\n","sig":null,"attributes":[{"value":"/ Reads a hex value from an iterator of characters.","span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":569,"byte_end":622,"line_start":30,"line_end":30,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":6},"span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":846,"byte_end":854,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"hex_pair","qualname":"::hex_pair","value":"fn (chars: &mut Chars) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Reads a pair of hex values, joining them in value range 0-255.\n","sig":null,"attributes":[{"value":"/ Reads a pair of hex values, joining them in value range 0-255.","span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":772,"byte_end":838,"line_start":38,"line_end":38,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":7},"span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":1165,"byte_end":1168,"line_start":52,"line_end":52,"column_start":8,"column_end":11},"name":"rgb","qualname":"::rgb","value":"fn (chars: &mut Chars) -> Option<[u8; 3]>","parent":null,"children":[],"decl_id":null,"docs":" Reads RGB colors from iterator of characters.\n","sig":null,"attributes":[{"value":"/ Reads RGB colors from iterator of characters.","span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":1108,"byte_end":1157,"line_start":51,"line_end":51,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":9},"span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":1599,"byte_end":1603,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"rgba","qualname":"::rgba","value":"fn (chars: &mut Chars) -> Option<[u8; 4]>","parent":null,"children":[],"decl_id":null,"docs":" Reads RGBA colors from iterator of characters.\n","sig":null,"attributes":[{"value":"/ Reads RGBA colors from iterator of characters.","span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":1541,"byte_end":1591,"line_start":68,"line_end":68,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":2154,"byte_end":2165,"line_start":90,"line_end":90,"column_start":8,"column_end":19},"name":"rgb_maybe_a","qualname":"::rgb_maybe_a","value":"fn (chars: &mut Chars) -> Option<([u8; 3], Option<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Reads RGB with optional alpha from iterator of characters.\n","sig":null,"attributes":[{"value":"/ Reads RGB with optional alpha from iterator of characters.","span":{"file_name":"/home/andy/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","byte_start":2084,"byte_end":2146,"line_start":89,"line_end":89,"column_start":1,"column_end":63}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}